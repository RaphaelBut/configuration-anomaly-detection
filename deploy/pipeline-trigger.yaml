apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: cad-check-trigger
  namespace: configuration-anomaly-detection
spec:
  params:
    - name: payload
      value: $(body)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: cad-check-trigger-template
  annotations:
    triggers.tekton.dev/old-escape-quotes: "true"
spec:
  params:
    - name: payload
      description: The event that triggered the webhook.
  resourcetemplates:
    # make sure ./pipeline-run.yaml is the same as this resource here
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: cad-check-$(uid)
      spec:
        timeout: 30m
        serviceAccountName: cad-sa
        pipelineRef:
          name: cad-checks-pipeline
        params:
          - name: payload
            value: $(tt.params.payload)

---
apiVersion: triggers.tekton.dev/v1beta1
kind: Trigger
metadata:
  name: cad-pipe-listener
spec:
  interceptors:
    - ref:
        name: "cel"
      params:
      - name: "filter"
        value: "header.canonical('X-Secret-Token').compareSecret('X_SECRET_TOKEN', 'cad-pd-token')"
  bindings:
  - ref: cad-check-trigger
  template:
    ref: cad-check-trigger-template
---
# in order to send request to the event listener and test on local crc use:
# curl -X POST --connect-timeout 1 -v --data '{"event": {"id":"12312"}}' http://el-cad-event-listener.ci.svc.cluster.local:8080
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: cad-event-listener
  annotations:
    triggers.tekton.dev/old-escape-quotes: "true"
spec:
  triggers:
  - triggerRef: cad-pipe-listener
  resources:
    kubernetesResource:
      spec:
        template:
          spec:
            containers:
              - resources:
                  requests:
                    cpu: 100m
                    memory: 64Mi
                  limits:
                    cpu: 1
                    memory: 256Mi
